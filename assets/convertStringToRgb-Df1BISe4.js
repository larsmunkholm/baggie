import{i as h}from"./isHexColor-BZesSPd8.js";import{c as o}from"./convertRangePosition-DHvMMI-c.js";const c=/rgba?\(\s*([.e0-9]+%?)\s*,\s*([.e0-9]+%?)\s*,\s*([.e0-9]+%?)\s*(?:,\s*([.e0-9]+)\s*)?\)/,l=e=>c.test(e);function g(e){if(h(e)){const t=e.slice(1);if(t.length===3||t.length===4){const r=[t.charAt(0),t.charAt(1),t.charAt(2),t.charAt(3)||"F"];return{red:parseInt(r[0]+r[0],16),green:parseInt(r[1]+r[1],16),blue:parseInt(r[2]+r[2],16),alpha:parseInt(r[3]+r[3],16)/255}}else{const r=[t.charAt(0)+t.charAt(1),t.charAt(2)+t.charAt(3),t.charAt(4)+t.charAt(5),t.charAt(7)?t.charAt(6)+t.charAt(7):"FF"];return{red:parseInt(r[0],16),green:parseInt(r[1],16),blue:parseInt(r[2],16),alpha:parseInt(r[3],16)/255}}}else if(l(e)){const[t,r,a,s,n]=e.match(c);return{red:r.endsWith("%")?Math.round(o(parseInt(r.slice(0,-1)),{from:0,to:100},{from:0,to:255})):parseInt(r),green:a.endsWith("%")?Math.round(o(parseInt(a.slice(0,-1)),{from:0,to:100},{from:0,to:255})):parseInt(a),blue:s.endsWith("%")?Math.round(o(parseInt(s.slice(0,-1)),{from:0,to:100},{from:0,to:255})):parseInt(s),alpha:n?parseFloat(n):0}}throw"Not a valid color string"}export{g as c};
