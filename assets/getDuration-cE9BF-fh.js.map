{"version":3,"file":"getDuration-cE9BF-fh.js","sources":["../../packages/core/src/math/time/getDuration/getDuration.ts","../../packages/core/src/math/time/getDuration/Example.tsx","../../packages/core/src/math/time/getDuration/getDuration.mdx"],"sourcesContent":["/**\n * Get the duration when supplying speed and distance.\n */\nexport const getDuration = (speed: number, distance: number): number =>\n    distance / speed;\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { getDuration } from \"./getDuration\";\n\ninterface Props {\n    speed: number;\n    distance: number;\n}\n\nexport const Example = (props: Props) => {\n    const [speed, setSpeed] = useState(props.speed);\n    const [distance, setDistance] = useState(props.distance);\n\n    const duration = useMemo(() => getDuration(speed, distance), [speed, distance]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Speed\" labelForId=\"speed-input\">\n                    <input\n                        id=\"speed-input\"\n                        type=\"number\"\n                        value={speed}\n                        onChange={({ target }) => setSpeed(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Distance\" labelForId=\"distance-input\">\n                    <input\n                        id=\"distance-input\"\n                        type=\"number\"\n                        value={distance}\n                        onChange={({ target }) => setDistance(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Duration\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>{isNaN(duration) ? \"Error\" : duration}</div>\n                </InputWrapper>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { getDuration } from \"@baggie/core\";\n\nconst speed = ${speed};\nconst distance = ${distance};\n\nconst duration = getDuration(speed, distance);\n// duration = ${duration}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getDuration\n\nGet the duration when supplying speed and distance.\n\nIf the speed is 100 (meters per minute) and distance is 10 (meters),\nthen the duration will be 10 (minutes).\n\n## Parameters\n\n| Parameter    | Type     | Required |\n| :----------- | :------- | :------: |\n| **speed**    | `number` |    ✔     |\n| **distance** | `number` |    ✔     |\n\n## Examples\n\n<Example speed={50} distance={100} />\n\n<Example speed={100} distance={100} />\n\n<Example speed={1} distance={100} />\n"],"names":["getDuration","speed","distance","Example","props","setSpeed","useState","setDistance","duration","useMemo","jsxs","Fragment","jsx","InputWrapper","target","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}