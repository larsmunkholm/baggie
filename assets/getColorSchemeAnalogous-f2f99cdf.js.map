{"version":3,"file":"getColorSchemeAnalogous-f2f99cdf.js","sources":["../../packages/core/src/color/colorSchemes/getColorSchemeAnalogous/getColorSchemeAnalogous.ts","../../packages/core/src/color/colorSchemes/getColorSchemeAnalogous/Example.tsx","../../packages/core/src/color/colorSchemes/getColorSchemeAnalogous/getColorSchemeAnalogous.mdx"],"sourcesContent":["import { RGBA } from \"../../_interfaces/rgba.interface\";\nimport { convertHslToRgb } from \"../../convert/convertHslToRgb/convertHslToRgb\";\nimport { convertRgbToHsl } from \"../../convert/convertRgbToHsl/convertRgbToHsl\";\nimport { convertStringToRgb } from \"../../convert/convertStringToRgb/convertStringToRgb\";\nimport { convertRgbToHex } from \"../../convert/convertRgbToHex/convertRgbToHex\";\n\n/**\n * Get an analogous color scheme.\n */\nexport const getColorSchemeAnalogous = (\n    color: string | RGBA,\n    count = 3,\n    steps = 12,\n): string[] => {\n    const hex = typeof color === \"string\" ? color : convertRgbToHex(color);\n    const rgb = typeof color === \"string\" ? convertStringToRgb(color) : color;\n    const { hue, saturation, lightness, alpha } = convertRgbToHsl(rgb);\n    const colors = [hex];\n    const step = 360 / steps;\n\n    for (let i = 1; i <= count - 1; i += 1) {\n        colors[colors.length] = convertRgbToHex(\n            convertHslToRgb({\n                hue: (hue + step * i) % 360,\n                saturation,\n                lightness,\n                alpha,\n            }),\n        );\n    }\n\n    return colors;\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { ColorViewer } from \"../../_components/ColorViewer/ColorViewer\";\nimport { ColorInput } from \"../../_components/ColorInput/ColorInput\";\nimport { getColorSchemeAnalogous } from \"./getColorSchemeAnalogous\";\n\ninterface Props {\n    color: string;\n    count: number;\n    steps: number;\n}\n\nexport const Example = (props: Props) => {\n    const [color, setColor] = useState(props.color);\n    const [count, setCount] = useState(props.count);\n    const [steps, setSteps] = useState(props.steps);\n\n    const scheme = useMemo(() => {\n        try {\n            return getColorSchemeAnalogous(color, count, steps);\n        } catch (err) {\n            return [];\n        }\n    }, [color, count, steps]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <ColorInput label=\"Color\" value={color} onChange={setColor} />\n\n                <InputWrapper label=\"Count\" labelForId=\"count-input\">\n                    <input\n                        id=\"count-input\"\n                        type=\"number\"\n                        value={count}\n                        onChange={({ target }) => setCount(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper\n                    label=\"Steps\"\n                    labelForId=\"steps-input\"\n                    helperText={`Should be at least be the same as \"count\"`}\n                >\n                    <input\n                        id=\"steps-input\"\n                        type=\"number\"\n                        value={steps}\n                        onChange={({ target }) => setSteps(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n            </div>\n\n            <div\n                key={`${color}--${count}--${steps}`}\n                style={{\n                    marginTop: \"25px\",\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    gap: \"10px\",\n                }}\n            >\n                {scheme.map((c) => (\n                    <ColorViewer key={c} color={c} />\n                ))}\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { getColorSchemeAnalogous } from \"@baggie/core\";\n\nconst color = \"${color}\";\nconst count = ${count};\nconst steps = ${steps};\n\nconst scheme = getColorSchemeAnalogous(color, count, steps);\n/*\nscheme = ${JSON.stringify(scheme, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getColorSchemeAnalogous\n\nGet an analogous color scheme.\n\nThese are colors that are next to each other on the color wheel.\n\n## Parameters\n\n| Parameter | Type     | Required | Default value | Description                                                                                                    |\n| :-------- | :------- | :------: | :------------ | -------------------------------------------------------------------------------------------------------------- |\n| **color** | `string` |    âœ”     |               | The base color.                                                                                                |\n| **count** | `number` |          | `3`           | The amount of colors you want (including the base color).                                                      |\n| **steps** | `number` |          | `12`          | The number of steps you want the color spectrum split into.<br />**Should be equal to or larger than `count`** |\n\n## Example\n\n<Example color=\"#ffcc00\" count={3} steps={12} />\n"],"names":["getColorSchemeAnalogous","color","count","steps","hex","convertRgbToHex","rgb","convertStringToRgb","hue","saturation","lightness","alpha","convertRgbToHsl","colors","step","i","convertHslToRgb","Example","props","setColor","useState","setCount","setSteps","scheme","useMemo","jsxs","Fragment","jsx","ColorInput","InputWrapper","target","c","ColorViewer","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}