{"version":3,"file":"convertRgbToHsl-ea6f52a7.js","sources":["../../packages/core/src/color/convert/convertRgbToHsl/Example.tsx","../../packages/core/src/color/convert/convertRgbToHsl/convertRgbToHsl.mdx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { ColorViewer } from \"../../_components/ColorViewer/ColorViewer\";\nimport { convertRgbToHex } from \"../convertRgbToHex/convertRgbToHex\";\nimport { convertRgbToHsl } from \"./convertRgbToHsl\";\n\ninterface Props {\n    red: number;\n    green: number;\n    blue: number;\n    alpha: number;\n}\n\nexport const Example = (props: Props) => {\n    const [red, setRed] = useState(props.red);\n    const [green, setGreen] = useState(props.green);\n    const [blue, setBlue] = useState(props.blue);\n    const [alpha, setAlpha] = useState(props.alpha);\n\n    const hex = useMemo(\n        () => convertRgbToHex({ red, green, blue, alpha }),\n        [red, green, blue, alpha],\n    );\n\n    const hsl = useMemo(\n        () => convertRgbToHsl({ red, green, blue, alpha }),\n        [red, green, blue, alpha],\n    );\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Red\" labelRight={red} labelForId=\"red-input\">\n                    <input\n                        id=\"red-input\"\n                        type=\"range\"\n                        min={0}\n                        max={255}\n                        step={1}\n                        value={red}\n                        onChange={({ target }) => setRed(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Green\" labelRight={green} labelForId=\"green-input\">\n                    <input\n                        id=\"green-input\"\n                        type=\"range\"\n                        min={0}\n                        max={255}\n                        step={1}\n                        value={green}\n                        onChange={({ target }) => setGreen(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Blue\" labelRight={blue} labelForId=\"blue-input\">\n                    <input\n                        id=\"blue-input\"\n                        type=\"range\"\n                        min={0}\n                        max={255}\n                        step={1}\n                        value={blue}\n                        onChange={({ target }) => setBlue(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Alpha\" labelRight={alpha.toFixed(2)} labelForId=\"alpha-input\">\n                    <input\n                        id=\"alpha-input\"\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.01}\n                        value={alpha}\n                        onChange={({ target }) => setAlpha(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n            </div>\n\n            <div\n                style={{\n                    marginTop: \"25px\",\n                    display: \"flex\",\n                    gap: \"10px\",\n                    alignItems: \"flex-start\",\n                }}\n            >\n                <ColorViewer color={hex} />\n\n                <table style={{ margin: 0 }}>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <b>Hue:</b>\n                            </td>\n                            <td>{hsl.hue}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <b>Saturation:</b>\n                            </td>\n                            <td>{hsl.saturation}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <b>Lightness:</b>\n                            </td>\n                            <td>{hsl.lightness}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <b>Alpha:</b>\n                            </td>\n                            <td>{hsl.alpha}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { convertRgbToHsl } from \"@baggie/core\";\n\nconst rgb = {\n   red: ${red},\n   green: ${green},\n   blue: ${blue},\n   alpha: ${alpha},\n};\n\nconst hsl = convertRgbToHsl(rgb);\n/*\nhsl = ${JSON.stringify(hsl, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# convertRgbToHsl\n\nConvert an object with RGB color values to HSL color values.\n\n## Parameters\n\n| Parameter | Type     | Required |\n| :-------- | :------- | :------: |\n| **color** | `object` |    ✔     |\n\n| Color property | Type     | Required | Description                   |\n| :------------- | :------- | :------: | :---------------------------- |\n| **red**        | `number` |    ✔     | The red color value (0-255)   |\n| **green**      | `number` |    ✔     | The green color value (0-255) |\n| **blue**       | `number` |    ✔     | The blue color value (0-255)  |\n| **alpha**      | `number` |          | The alpha value (0-1)         |\n\n## Example\n\n<Example red={128} green={128} blue={128} alpha={1} />\n"],"names":["Example","props","red","setRed","useState","green","setGreen","blue","setBlue","alpha","setAlpha","hex","useMemo","convertRgbToHex","hsl","convertRgbToHsl","jsxs","Fragment","jsx","InputWrapper","target","ColorViewer","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}