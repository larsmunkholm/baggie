import{j as e}from"./jsx-runtime-94f6e698.js";import{r as c}from"./index-8db94870.js";import{b as f}from"./index-21461081.js";import{I as u}from"./InputWrapper-088860b1.js";import{T as b}from"./TextareaWithHighlights-8f1cf945.js";import{u as g}from"./index-1d576ef5.js";import"./_commonjsHelpers-042e6b4d.js";import"./iframe-bde67206.js";import"../sb-preview/runtime.js";import"./index-d475d2ea.js";import"./index-80ae7d84.js";import"./index-d37d4223.js";import"./index-356e4a49.js";const y=(n,r,s,t)=>{const h=typeof s>"u"?void 0:s<1?s-1:s,l=n.match(/&#?[a-z0-9]+;|.?/gi),a=l.slice(r,h).join(""),d=t!=null&&t.verbose?l.slice(0,r).join("").length:0;return t!=null&&t.verbose?{output:a,realIndexStart:d,realIndexEnd:d+a.length}:a},o=n=>{const[r,s]=c.useState(n.defaultInput),[t,h]=c.useState(n.start),[l,a]=c.useState(n.end),[d,m]=c.useState(!1),{output:x,realIndexStart:j,realIndexEnd:p}=c.useMemo(()=>y(r,t,l,{verbose:!0}),[r,t,l]);return e.jsxs(e.Fragment,{children:[e.jsxs("div",{style:{display:"flex",flexDirection:"column",gap:"10px"},children:[e.jsx(u,{label:"Input",labelForId:"input-input",children:e.jsx(b,{id:"input-input",value:r,onChange:({target:i})=>s(i.value),style:{width:"100%",maxWidth:"360px"},highlights:[j,p],spellCheck:!1,rows:3})}),e.jsxs("div",{style:{display:"flex",gap:"10px"},children:[e.jsx(u,{label:"Index start",labelForId:"start-input",children:e.jsx("input",{id:"start-input",type:"number",value:t,onChange:({target:i})=>h(i.valueAsNumber)})}),e.jsx(u,{label:"Index end",labelForId:"end-input",children:e.jsx("input",{id:"end-input",type:"number",value:l,onChange:({target:i})=>a(i.valueAsNumber)})})]}),e.jsxs("label",{children:[e.jsx("input",{type:"checkbox",checked:d,onChange:()=>m(i=>!i)}),"Verbose"]})]}),e.jsx(f,{dark:!0,code:`
import { substringHtmlEntitySafe } from "@baggie/core";

const input = \`${r.replace(/`/g,"\\`")}\`;

const indexStart = ${t||0};
const indexEnd = ${isNaN(l)?"undefined":l};

const output = substringHtmlEntitySafe(input, indexStart, indexEnd${d?", { verbose: true }":""});
/*
${d?`output = ${JSON.stringify({output:x,realIndexStart:j,realIndexEnd:p},null,4)}`:`output = \`${x}\``}
*/
`})]})};try{o.displayName="Example",o.__docgenInfo={description:"",displayName:"Example",props:{defaultInput:{defaultValue:null,description:"",name:"defaultInput",required:!0,type:{name:"string"}},start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"number"}},end:{defaultValue:null,description:"",name:"end",required:!1,type:{name:"number"}}}}}catch{}function $(n={}){const{wrapper:r}=Object.assign({},g(),n.components);return r?e.jsx(r,Object.assign({},n,{children:e.jsx(s,{})})):s();function s(){const t=Object.assign({h1:"h1",p:"p",strong:"strong",blockquote:"blockquote",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code"},g(),n.components);return e.jsxs(e.Fragment,{children:[e.jsx(t.h1,{id:"substringhtmlentitysafe",children:"substringHtmlEntitySafe"}),`
`,e.jsxs(t.p,{children:[`Get part of a string between the start and end indexes, or to the end of the
string. `,e.jsx(t.strong,{children:"HTML entities are each counted as one character."})]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsx(t.p,{children:"HTML entities begin with an ampersand (&) and ends with a semicolon (;)."}),`
`,e.jsx(t.p,{children:`They are frequently used to display characters that reserved by HTML,
invisible or difficult to type.`}),`
`]}),`
`,e.jsx(t.h2,{id:"parameters",children:"Parameters"}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{align:"left",children:"Parameter"}),e.jsx(t.th,{align:"left",children:"Type"}),e.jsx(t.th,{align:"center",children:"Required"}),e.jsx(t.th,{align:"left",children:"Description"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{align:"left",children:e.jsx(t.strong,{children:"string"})}),e.jsx(t.td,{align:"left",children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{align:"center",children:"✔"}),e.jsx(t.td,{align:"left",children:"The string to shorten."})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{align:"left",children:e.jsx(t.strong,{children:"indexStart"})}),e.jsx(t.td,{align:"left",children:e.jsx(t.code,{children:"number"})}),e.jsx(t.td,{align:"center",children:"✔"}),e.jsx(t.td,{align:"left",children:"Where the substring starts."})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{align:"left",children:e.jsx(t.strong,{children:"indexEnd"})}),e.jsx(t.td,{align:"left",children:e.jsx(t.code,{children:"number | undefined"})}),e.jsx(t.td,{align:"center"}),e.jsx(t.td,{align:"left",children:"Where the substring ends (not included)."})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{align:"left",children:e.jsx(t.strong,{children:"options"})}),e.jsx(t.td,{align:"left",children:e.jsx(t.code,{children:"object"})}),e.jsx(t.td,{align:"center"}),e.jsx(t.td,{align:"left"})]})]})]}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{align:"left",children:"Option"}),e.jsx(t.th,{align:"left",children:"Type"}),e.jsx(t.th,{align:"left",children:"Default value"}),e.jsx(t.th,{align:"left",children:"Description"})]})}),e.jsx(t.tbody,{children:e.jsxs(t.tr,{children:[e.jsx(t.td,{align:"left",children:e.jsx(t.strong,{children:"verbose"})}),e.jsx(t.td,{align:"left",children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{align:"left",children:e.jsx(t.code,{children:"false"})}),e.jsx(t.td,{align:"left",children:"Enable verbose return value."})]})})]}),`
`,e.jsx(t.h2,{id:"examples",children:"Examples"}),`
`,e.jsx(o,{defaultInput:"lorem &aelig;&oslash;&aring; ipsum",start:0,end:12}),`
`,e.jsx(o,{defaultInput:"&aelig;&oslash;&aring;",start:1,end:2}),`
`,e.jsx(o,{defaultInput:"sit &amp; amet",start:4,end:5})]})}}export{$ as default};
//# sourceMappingURL=substringHtmlEntitySafe-c4135e4d.js.map
