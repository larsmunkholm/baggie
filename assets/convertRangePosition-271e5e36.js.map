{"version":3,"file":"convertRangePosition-271e5e36.js","sources":["../../packages/core/src/math/range/convertRangePosition/Example.tsx","../../packages/core/src/math/range/convertRangePosition/convertRangePosition.mdx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { convertRangePosition } from \"./convertRangePosition\";\n\ninterface Props {\n    position: number;\n    fromFrom: number;\n    fromTo: number;\n    toFrom: number;\n    toTo: number;\n}\n\nexport const Example = (props: Props) => {\n    const [position, setPosition] = useState(props.position);\n    const [fromFrom, setFromFrom] = useState(props.fromFrom);\n    const [fromTo, setFromTo] = useState(props.fromTo);\n    const [toFrom, setToFrom] = useState(props.toFrom);\n    const [toTo, setToTo] = useState(props.toTo);\n\n    const result = useMemo(\n        () =>\n            convertRangePosition(\n                position,\n                { from: fromFrom, to: fromTo },\n                { from: toFrom, to: toTo },\n            ),\n        [position, fromFrom, fromTo, toFrom, toTo],\n    );\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Position\" labelForId=\"position-input\">\n                    <input\n                        id=\"position-input\"\n                        type=\"number\"\n                        value={position}\n                        onChange={({ target }) => setPosition(target.valueAsNumber || 0)}\n                        autoComplete=\"off\"\n                    />\n                </InputWrapper>\n\n                <fieldset>\n                    <legend>From range</legend>\n\n                    <InputWrapper label=\"From\" labelForId=\"from-from-input\">\n                        <input\n                            id=\"from-from-input\"\n                            type=\"number\"\n                            value={fromFrom}\n                            onChange={({ target }) => setFromFrom(target.valueAsNumber || 0)}\n                            autoComplete=\"off\"\n                        />\n                    </InputWrapper>\n\n                    <InputWrapper label=\"To\" labelForId=\"from-to-input\">\n                        <input\n                            id=\"from-to-input\"\n                            type=\"number\"\n                            value={fromTo}\n                            onChange={({ target }) => setFromTo(target.valueAsNumber || 0)}\n                            autoComplete=\"off\"\n                        />\n                    </InputWrapper>\n                </fieldset>\n\n                <fieldset>\n                    <legend>To range</legend>\n\n                    <InputWrapper label=\"From\" labelForId=\"to-from-input\">\n                        <input\n                            id=\"to-from-input\"\n                            type=\"number\"\n                            value={toFrom}\n                            onChange={({ target }) => setToFrom(target.valueAsNumber || 0)}\n                            autoComplete=\"off\"\n                        />\n                    </InputWrapper>\n\n                    <InputWrapper label=\"To\" labelForId=\"to-to-input\">\n                        <input\n                            id=\"to-to-input\"\n                            type=\"number\"\n                            value={toTo}\n                            onChange={({ target }) => setToTo(target.valueAsNumber || 0)}\n                            autoComplete=\"off\"\n                        />\n                    </InputWrapper>\n                </fieldset>\n\n                <InputWrapper label=\"Result\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>{result}</div>\n                </InputWrapper>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { convertRangePosition } from \"@baggie/core\";\n\nconst fromRange = { from: ${fromFrom}, to: ${fromTo} };\nconst toRange = { from: ${toFrom}, to: ${toTo} };\n\nconst newPosition = convertRangePosition(${position}, fromRange, toRange);\n// newPosition = ${result}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# convertRangePosition\n\nConvert the position in a range to another range.\n\n## Parameters\n\n| Parameter     | Type                           | Required |\n| :------------ | :----------------------------- | :------: |\n| **position**  | `number`                       |    ✔     |\n| **fromRange** | `{ from: number; to: number }` |    ✔     |\n| **toRange**   | `{ from: number; to: number }` |    ✔     |\n\n## Example\n\n<Example position={5} fromFrom={0} fromTo={10} toFrom={-10} toTo={0} />\n"],"names":["Example","props","position","setPosition","useState","fromFrom","setFromFrom","fromTo","setFromTo","toFrom","setToFrom","toTo","setToTo","result","useMemo","convertRangePosition","jsxs","Fragment","jsx","InputWrapper","target","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}