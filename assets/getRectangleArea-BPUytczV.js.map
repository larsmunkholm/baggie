{"version":3,"file":"getRectangleArea-BPUytczV.js","sources":["../../packages/core/src/math/geometry/rectangle/getRectangleArea/getRectangleArea.ts","../../packages/core/src/math/geometry/rectangle/getRectangleArea/Example.tsx","../../packages/core/src/math/geometry/rectangle/getRectangleArea/getRectangleArea.mdx"],"sourcesContent":["/**\n * Get the surface area of a rectangle.\n */\nexport const getRectangleArea = (x: number, y: number): number => x * y;\n","import React, { useMemo, useState } from \"react\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { Source } from \"@storybook/blocks\";\nimport { getRectangleArea } from \"./getRectangleArea\";\n\ninterface Props {\n    x: number;\n    y: number;\n}\n\nexport const Example = (props: Props) => {\n    const [x, setX] = useState(props.x);\n    const [y, setY] = useState(props.y);\n\n    const area = useMemo(() => getRectangleArea(x, y), [x, y]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"X\" labelForId=\"x-input\">\n                    <input\n                        id=\"x-input\"\n                        type=\"number\"\n                        value={x}\n                        onChange={({ target }) => setX(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Y\" labelForId=\"x-input\">\n                    <input\n                        id=\"y-input\"\n                        type=\"number\"\n                        value={y}\n                        onChange={({ target }) => setY(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Surface area\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>{isNaN(area) ? \"Error\" : area}</div>\n                </InputWrapper>\n            </div>\n\n            <div\n                style={{\n                    aspectRatio: `${Math.abs(x)} / ${Math.abs(y)}`,\n                    background: \"#FC0\",\n                    width:\n                        Math.abs(x) >= Math.abs(y)\n                            ? \"150px\"\n                            : `${(Math.abs(x) / Math.abs(y)) * 150}px`,\n                    height:\n                        Math.abs(x) <= Math.abs(y)\n                            ? \"150px\"\n                            : `${(Math.abs(y) / Math.abs(x)) * 150}px`,\n                    marginTop: \"20px\",\n                    position: \"relative\",\n                    display: \"inline-block\",\n                    pointerEvents: \"none\",\n                    userSelect: \"none\",\n                    transition: \"all .4s ease-out\",\n                }}\n            >\n                <div\n                    style={{\n                        position: \"absolute\",\n                        inset: \"2px\",\n                        background: `repeating-linear-gradient(\n                            -45deg,\n                            #900,\n                            #900 2px,\n                            #FC0 2px,\n                            #FC0 8px\n                        )`,\n                    }}\n                />{\" \"}\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { getRectangleArea } from \"@baggie/core\";\n\nconst x = ${x || 0};\nconst y = ${y || 0};\n\nconst surfaceArea = getRectangleArea(x, y);\n// surfaceArea = ${area}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getRectangleArea\n\nGet the surface area of a rectangle.\n\n## Parameters\n\n| Parameter | Type     | Required |\n| :-------- | :------- | :------: |\n| **x**     | `number` |    ✔     |\n| **y**     | `number` |    ✔     |\n\n## Example\n\n<Example x={20} y={10} />\n"],"names":["getRectangleArea","x","y","Example","props","setX","useState","setY","area","useMemo","jsxs","Fragment","jsx","InputWrapper","target","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}