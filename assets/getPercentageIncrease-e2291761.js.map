{"version":3,"file":"getPercentageIncrease-e2291761.js","sources":["../../packages/core/src/math/percentage/getPercentageIncrease/getPercentageIncrease.ts","../../packages/core/src/math/percentage/getPercentageIncrease/Example.tsx","../../packages/core/src/math/percentage/getPercentageIncrease/getPercentageIncrease.mdx"],"sourcesContent":["/**\n * Get the increase from one value to another in percentage.\n */\nexport const getPercentageIncrease = (\n    from: number,\n    to: number,\n    percentageAsDecimal = true,\n): number => ((to - from) / from) * (percentageAsDecimal ? 1 : 100) || 0;\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { getPercentageIncrease } from \"./getPercentageIncrease\";\n\ninterface Props {\n    from: number;\n    to: number;\n}\n\nexport const Example = (props: Props) => {\n    const [from, setFrom] = useState(props.from);\n    const [to, setTo] = useState(props.to);\n    const [percentageAsDecimal, setPercentageAsDecimal] = useState(true);\n\n    const result = useMemo(\n        () => getPercentageIncrease(from, to, percentageAsDecimal),\n        [from, to, percentageAsDecimal],\n    );\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"From\" labelForId=\"from-input\">\n                    <input\n                        id=\"from-input\"\n                        type=\"number\"\n                        value={from}\n                        onChange={({ target }) => setFrom(target.valueAsNumber || 0)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"To\" labelForId=\"to-input\">\n                    <input\n                        id=\"to-input\"\n                        type=\"number\"\n                        value={to}\n                        onChange={({ target }) => setTo(target.valueAsNumber || 0)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Percentage\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>{result}</div>\n                </InputWrapper>\n            </div>\n\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={percentageAsDecimal}\n                    onChange={() => setPercentageAsDecimal((current) => !current)}\n                />{\" \"}\n                Percentage as decimal\n            </label>\n\n            <Source\n                dark\n                code={`\nimport { setPercentageAsDecimal } from \"@baggie/core\";\n\nconst from = ${from};\nconst to = ${to};\n\nconst percentage = setPercentageAsDecimal(from, to${percentageAsDecimal ? \"\" : \", false\"});\n// percentage = ${result}${percentageAsDecimal ? ` (${result * 100}%)` : \"\"}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getPercentageIncrease\n\nGet the increase from one value to another in percentage.\n\n## Parameters\n\n| Parameter               | Type      | Required | Default value |\n| :---------------------- | :-------- | :------: | :------------ |\n| **from**                | `number`  |    ✔     |               |\n| **to**                  | `number`  |    ✔     |               |\n| **percentageAsDecimal** | `boolean` |          | `true`        |\n\n## Examples\n\n<Example from={10} to={100} />\n\n<Example from={100} to={10} />\n"],"names":["getPercentageIncrease","from","to","percentageAsDecimal","Example","props","setFrom","useState","setTo","setPercentageAsDecimal","result","useMemo","jsxs","Fragment","jsx","InputWrapper","target","current","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}