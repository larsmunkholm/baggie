{"version":3,"file":"convertNewlinesToBreaks-89QaVCX6.js","sources":["../../packages/core/src/string/manipulation/convertNewlinesToBreaks/convertNewlinesToBreaks.ts","../../packages/core/src/string/manipulation/convertNewlinesToBreaks/Example.tsx","../../packages/core/src/string/manipulation/convertNewlinesToBreaks/convertNewlinesToBreaks.mdx"],"sourcesContent":["import { getNewlineRegex } from \"../../regex/getNewlineRegex/getNewlineRegex\";\n\n/**\n * Replace newlines with break elements.\n */\nexport const convertNewlinesToBreaks = (\n    string: string,\n    keepWhitespace = false,\n): string => string.replace(getNewlineRegex(!keepWhitespace), \"<br />\");\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { convertNewlinesToBreaks } from \"./convertNewlinesToBreaks\";\n\ninterface Props {\n    input: string;\n}\n\nexport const Example = (props: Props) => {\n    const [input, setInput] = useState(props.input);\n    const [keepWhitespace, setKeepWhitespace] = useState(false);\n\n    const output = useMemo(\n        () => convertNewlinesToBreaks(input, keepWhitespace),\n        [input, keepWhitespace],\n    );\n\n    return (\n        <>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\n                <InputWrapper label=\"Input\" labelForId=\"input-input\">\n                    <textarea\n                        id=\"input-input\"\n                        value={input}\n                        onChange={({ target }) => setInput(target.value)}\n                        style={{ width: \"360px\", maxWidth: \"100%\" }}\n                        spellCheck={false}\n                        rows={3}\n                    />\n                </InputWrapper>\n\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={keepWhitespace}\n                        onChange={() => setKeepWhitespace((current) => !current)}\n                    />\n                    Keep whitespace\n                </label>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { convertNewlinesToBreaks } from \"@baggie/core\";\n\nconst string = \\`${input}\\`;\n${keepWhitespace ? \"const keepWhitespace = true;\\n\" : \"\"}\nconst output = convertNewlinesToBreaks(string${keepWhitespace ? \", keepWhitespace\" : \"\"});\n// output = ${output}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# convertNewlinesToBreaks\n\nReplace new lines with break elements.\n\n## Parameters\n\n| Parameter          | Type      | Required | Default value |\n| :----------------- | :-------- | :------: | :------------ |\n| **string**         | `string`  |    âœ”     |               |\n| **keepWhitespace** | `boolean` |          | `false`       |\n\n## Example\n\n<Example input={`hello\n    friend`} />\n"],"names":["convertNewlinesToBreaks","string","keepWhitespace","getNewlineRegex","Example","props","input","setInput","useState","setKeepWhitespace","output","useMemo","jsxs","Fragment","jsx","InputWrapper","target","current","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}