{"version":3,"file":"convertRgbToHsl-ef3890c5.js","sources":["../../packages/core/src/color/convert/convertRgbToHsl/convertRgbToHsl.ts"],"sourcesContent":["import { HSLA } from \"../../_interfaces/hsla.interface\";\nimport { RGBA } from \"../../_interfaces/rgba.interface\";\n\n/**\n * Convert an object with RGB color to HSL color values.\n */\nexport const convertRgbToHsl = ({\n    red,\n    green,\n    blue,\n    alpha = 1,\n}: RGBA): HSLA => {\n    const r = red / 255;\n    const g = green / 255;\n    const b = blue / 255;\n\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const lightness = (max + min) / 2;\n    const difference = max - min;\n    const saturation =\n        difference === 0 ? 0 : difference / (1 - Math.abs(2 * lightness - 1));\n\n    let hue = 0;\n\n    if (difference) {\n        if (max === r) {\n            hue = ((g - b) / difference) % 6;\n        } else if (max === g) {\n            hue = (b - r) / difference + 2;\n        } else if (max === b) {\n            hue = (r - g) / difference + 4;\n        }\n\n        hue *= 60;\n    }\n\n    return {\n        hue,\n        saturation,\n        lightness,\n        alpha,\n    };\n};\n"],"names":["convertRgbToHsl","red","green","blue","alpha","r","g","b","max","min","lightness","difference","saturation","hue"],"mappings":"AAMO,MAAMA,EAAkB,CAAC,CAC5B,IAAAC,EACA,MAAAC,EACA,KAAAC,EACA,MAAAC,EAAQ,CACZ,IAAkB,CACd,MAAMC,EAAIJ,EAAM,IACVK,EAAIJ,EAAQ,IACZK,EAAIJ,EAAO,IAEXK,EAAM,KAAK,IAAIH,EAAGC,EAAGC,CAAC,EACtBE,EAAM,KAAK,IAAIJ,EAAGC,EAAGC,CAAC,EACtBG,GAAaF,EAAMC,GAAO,EAC1BE,EAAaH,EAAMC,EACnBG,EACFD,IAAe,EAAI,EAAIA,GAAc,EAAI,KAAK,IAAI,EAAID,EAAY,CAAC,GAEvE,IAAIG,EAAM,EAEV,OAAIF,IACIH,IAAQH,EACAQ,GAAAP,EAAIC,GAAKI,EAAc,EACxBH,IAAQF,EACRO,GAAAN,EAAIF,GAAKM,EAAa,EACtBH,IAAQD,IACRM,GAAAR,EAAIC,GAAKK,EAAa,GAG1BE,GAAA,IAGJ,CACH,IAAAA,EACA,WAAAD,EACA,UAAAF,EACA,MAAAN,CAAA,CAER"}