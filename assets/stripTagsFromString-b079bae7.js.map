{"version":3,"file":"stripTagsFromString-b079bae7.js","sources":["../../packages/core/src/string/manipulation/stripTagsFromString/stripTagsFromString.ts","../../packages/core/src/string/manipulation/stripTagsFromString/Example.tsx","../../packages/core/src/string/manipulation/stripTagsFromString/stripTagsFromString.mdx"],"sourcesContent":["import { getTagsRegex } from \"../../regex/getTagsRegex/getTagsRegex\";\n\n/**\n * Strip HTML and XML tags from a string. Tags are replaced with a space unless .\n */\nexport const stripTagsFromString = (\n    string: string,\n    replaceWith = \" \",\n    trim = true,\n): string => {\n    const newString = string.replace(getTagsRegex(true), replaceWith);\n    return trim ? newString.trim() : newString;\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { stripTagsFromString } from \"./stripTagsFromString\";\n\ninterface Props {\n    string: string;\n    replaceWith?: string;\n}\n\nexport const Example = (props: Props) => {\n    const [string, setString] = useState(props.string);\n    const [replaceWith, setReplaceWith] = useState(props.replaceWith || \" \");\n    const [trim, setTrim] = useState(true);\n\n    const output = useMemo(\n        () => stripTagsFromString(string, replaceWith, trim),\n        [string, replaceWith, trim],\n    );\n\n    return (\n        <>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\n                <InputWrapper label=\"String\" labelForId=\"string-input\">\n                    <textarea\n                        id=\"string-input\"\n                        value={string}\n                        onChange={({ target }) => setString(target.value)}\n                        style={{ width: \"100%\", maxWidth: \"360px\" }}\n                        spellCheck={false}\n                        rows={3}\n                    />\n                </InputWrapper>\n\n                <div style={{ display: \"flex\", gap: \"10px\" }}>\n                    <InputWrapper label=\"Replace with\" labelForId=\"replace-with-input\">\n                        <input\n                            id=\"replace-with-input\"\n                            value={replaceWith}\n                            onChange={({ target }) => setReplaceWith(target.value)}\n                        />\n                    </InputWrapper>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={trim}\n                            onChange={() => setTrim((current) => !current)}\n                        />{\" \"}\n                        Trim\n                    </label>\n                </div>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { stripTagsFromString } from \"@baggie/core\";\n\nconst string = \\`${string.replace(/`/g, \"\\\\`\")}\\`;\n${replaceWith === \" \" ? \"\" : `const replaceWith = \"${replaceWith}\";\\n`}\nconst output = stripTagsFromString(input${\n                    replaceWith === \" \" ? (trim ? \"\" : \", undefined\") : \", replaceWith\"\n                }${trim ? \"\" : \", false\"});\n/*\noutput = ${JSON.stringify(output, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# stripTagsFromString\n\nStrip HTML and XML tags from a string. Tags are replaced with a space by default.\n\n## Parameters\n\n| Parameter       | Type      | Required | Description                                              |\n| :-------------- | :-------- | :------: | :------------------------------------------------------- |\n| **string**      | `string`  |    âœ”     | The string to strip for tags                             |\n| **replaceWith** | `string`  |          | What to replace the tags with. Defaults to a space `\" \"` |\n| **trim**        | `boolean` |          | Defaults to `true`                                       |\n\n## Examples\n\n<Example\n    string=\"<p><b>Bold move.</b><br/>Paragraph.</p><!-- comment -->:)\"\n/>\n\n<Example\n    string=\"<p><b>Bold move.</b><br/>Paragraph.</p><!-- comment -->:)\"\n    replaceWith=\"---\"\n/>\n"],"names":["stripTagsFromString","string","replaceWith","trim","newString","getTagsRegex","Example","props","setString","useState","setReplaceWith","setTrim","output","useMemo","jsxs","Fragment","jsx","InputWrapper","target","current","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}