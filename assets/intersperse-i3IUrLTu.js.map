{"version":3,"file":"intersperse-i3IUrLTu.js","sources":["../../packages/core/src/functions/arrays/intersperse/intersperse.ts","../../packages/core/src/functions/arrays/intersperse/Example.tsx","../../packages/core/src/functions/arrays/intersperse/intersperse.mdx"],"sourcesContent":["/**\n * Insert new values between all existing values in an array.\n */\nexport const intersperse = <A, I>(\n    array: A[],\n    ...insertion: (I extends () => any\n        ? (args: { previous: A; next: A; index: number }) => any\n        : any)[]\n): (A | (I extends () => any ? ReturnType<I> : I))[] =>\n    array.reduce((accumulator: any[], element, index, array) => {\n        accumulator.push(element);\n        if (index < array.length - 1) {\n            insertion.forEach((insert, insertIndex) =>\n                accumulator.push(\n                    typeof insert === \"function\"\n                        ? insert({\n                              previous: array[index],\n                              next: array[index + 1],\n                              index: insertIndex,\n                          })\n                        : insert,\n                ),\n            );\n        }\n        return accumulator;\n    }, []);\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { intersperse } from \"./intersperse\";\n\ninterface Props {\n    array: string;\n    insertion: string;\n}\n\nexport const Example = (props: Props) => {\n    const [array, setArray] = useState(props.array);\n    const [insertion, setInsertion] = useState(props.insertion);\n\n    const { splitArray, splitInsertion, output } = useMemo(() => {\n        const splitArray = array.split(/\\s*,\\s*/).filter((part) => part !== \"\");\n        const splitInsertion = insertion.split(/\\s*,\\s*/).filter((part) => part !== \"\");\n        const output = intersperse(splitArray, ...splitInsertion);\n        return { splitArray, splitInsertion, output };\n    }, [array, insertion]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Array\" labelForId=\"array-input\">\n                    <input\n                        id=\"array-input\"\n                        value={array}\n                        onChange={({ target }) => setArray(target.value)}\n                        spellCheck={false}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Insertion\" labelForId=\"insertion-input\">\n                    <input\n                        id=\"insertion-input\"\n                        value={insertion}\n                        onChange={({ target }) => setInsertion(target.value)}\n                        spellCheck={false}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Output\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>\n                        <code>{JSON.stringify(output)}</code>\n                    </div>\n                </InputWrapper>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { intersperse } from \"@baggie/core\";\n\nconst array = ${JSON.stringify(splitArray)};\nconst insertion = ${JSON.stringify(\n                    splitInsertion.length === 1 ? splitInsertion[0] : splitInsertion,\n                )};\n\nconst output = intersperse(array, ${splitInsertion.length === 1 ? \"\" : \"...\"}insertion);\n/*\noutput = ${JSON.stringify(output, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\nimport { Source } from \"@storybook/blocks\";\n\n# intersperse\n\nInsert new values between all existing values in an array.\n\n## Parameters\n\n| Parameter     | Type       | Required |\n| :------------ | :--------- | :------: |\n| **array**     | `any[]`    |    ✔     |\n| **insertion** | `...any[]` |    ✔     |\n\n## Example\n\nWith a single insertion:\n\n<Example array=\"a, b, c, d\" insertion=\"+\" />\n\nWith multiple insertions:\n\n<Example array=\"a, b, c, d\" insertion=\"+, -\" />\n\nWith a function:\n\n<Source dark code={`\nimport { intersperse } from \"@baggie/core\";\n\nconst numbers = [10, 20, 30, 40];\nconst insertion = ({ previous, next }) => previous + (next - previous) / 2;\n\nconst newNumbers = intersperse(numbers, insertion);\n// newNumbers = [10, 15, 20, 25, 30, 35, 40]\n`} />\n"],"names":["intersperse","array","insertion","accumulator","element","index","insert","insertIndex","Example","props","setArray","useState","setInsertion","splitArray","splitInsertion","output","useMemo","splitArray2","part","splitInsertion2","output2","jsxs","Fragment","jsx","InputWrapper","target","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}