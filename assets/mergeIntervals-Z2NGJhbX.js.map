{"version":3,"file":"mergeIntervals-Z2NGJhbX.js","sources":["../../packages/core/src/math/range/mergeIntervals/Example.tsx","../../packages/core/src/math/range/mergeIntervals/mergeIntervals.mdx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { mergeIntervals } from \"./mergeIntervals\";\n\ninterface Props {\n    ranges: string;\n}\n\nexport const Example = (props: Props) => {\n    const [ranges, setRanges] = useState(props.ranges);\n    const [combineEquals, setCombineEquals] = useState(true);\n\n    const { realRanges, result } = useMemo(() => {\n        const realRanges = ranges\n            .replace(/][^[{]+/g, \"]\\n\")\n            .replace(/}[^[{]+/g, \"}\\n\")\n            .split(\"\\n\")\n            .map((item) => {\n                try {\n                    return JSON.parse(item.replace(/[\"`']/g, \"\").replace(/([a-z]+)/g, `\"$1\"`));\n                } catch (err) {\n                    return undefined;\n                }\n            })\n            .filter(\n                (x) =>\n                    x &&\n                    ((Array.isArray(x) && x.length === 2) ||\n                        (typeof x === \"object\" &&\n                            typeof x.from === \"number\" &&\n                            typeof x.to === \"number\")),\n            );\n        const result = mergeIntervals(realRanges, combineEquals);\n\n        return { realRanges, result };\n    }, [ranges, combineEquals]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Ranges\" labelForId=\"ranges-input\">\n                    <textarea\n                        id=\"ranges-input\"\n                        value={ranges}\n                        onChange={({ target }) => setRanges(target.value)}\n                        style={{ width: \"100%\", maxWidth: \"360px\" }}\n                        autoComplete=\"off\"\n                        rows={3}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Result\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>{JSON.stringify(result)}</div>\n                </InputWrapper>\n            </div>\n\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={combineEquals}\n                    onChange={() => setCombineEquals((current) => !current)}\n                />{\" \"}\n                Combine equals\n            </label>\n\n            <Source\n                dark\n                code={`\nimport { mergeIntervals } from \"@baggie/core\";\n\nconst ranges = ${\n                    realRanges.length === 1\n                        ? JSON.stringify(realRanges[0], null, 4)\n                        : JSON.stringify(realRanges, null, 4)\n                };\n\nconst result = mergeIntervals(ranges);\n/*\nresult = ${JSON.stringify(result, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# mergeIntervals\n\nMerge and combine overlapping intervals.\n\n## Parameters\n\n| Parameter         | Type                                                                               | Required | Default value |\n| :---------------- | :--------------------------------------------------------------------------------- | :------: | :------------ |\n| **ranges**        | An `Array` or single value of `{ from: number; to: number }` or `[number, number]` |    âœ”     |               |\n| **combineEquals** | `boolean`                                                                          |          | `true`        |\n\n## Examples\n\nKeep number outside a single range\n\n<Example number={30} ranges={\"{ from: 25, to: 75 }\"} />\n\nKeep number outside multiple ranges\n\n<Example number={10} ranges={\"[0, 10]\\n[10, 20]\\n{ from: 25, to: 75 }\"} />\n"],"names":["Example","props","ranges","setRanges","useState","combineEquals","setCombineEquals","realRanges","result","useMemo","realRanges2","item","x","result2","mergeIntervals","jsxs","Fragment","jsx","InputWrapper","target","current","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}