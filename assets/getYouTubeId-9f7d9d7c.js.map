{"version":3,"file":"getYouTubeId-9f7d9d7c.js","sources":["../../packages/core/src/string/convert/getYouTubeId/getYouTubeId.ts","../../packages/core/src/string/convert/getYouTubeId/Example.tsx","../../packages/core/src/string/convert/getYouTubeId/getYouTubeId.mdx"],"sourcesContent":["import { getYouTubeIdRegex } from \"../../regex/getYouTubeIdRegex/getYouTubeIdRegex\";\n\n/**\n * Convert a YouTube URL to a video ID.\n */\nexport const getYouTubeId = (input: string): string | undefined => {\n    const match = input.trim().match(getYouTubeIdRegex());\n    return match && match.length > 1 ? match[1] : undefined;\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { getYouTubeId } from \"./getYouTubeId\";\n\ninterface Props {\n    input: string;\n}\n\nexport const Example = (props: Props) => {\n    const [input, setInput] = useState(props.input);\n\n    const id = useMemo(() => getYouTubeId(input), [input]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"10px\" }}>\n                <InputWrapper label=\"Input\" labelForId=\"input-input\">\n                    <textarea\n                        id=\"input-input\"\n                        value={input}\n                        onChange={({ target }) => setInput(target.value)}\n                        style={{ width: \"360px\", maxWidth: \"100%\" }}\n                        spellCheck={false}\n                        rows={3}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"ID\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>{id || \"undefined\"}</div>\n                </InputWrapper>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { getYouTubeId } from \"@baggie/core\";\n\nconst input = \\`${input}\\`;\n\nconst id = getYouTubeId(input);\n// id = ${id ? `\"${id}\"` : \"undefined\"}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getYouTubeId\n\nGet the YouTube ID from a URL.\n\n## Parameters\n\n| Parameter | Type     | Required | Description                            |\n| :-------- | :------- | :------: | :------------------------------------- |\n| **input** | `string` |    âœ”     | The string to get the YouTube ID from. |\n\n## Examples\n\nThe standard YouTube URL:\n\n<Example input=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" />\n\nWith other parameters:\n\n<Example input=\"https://www.youtube.com/watch?v=eDtGYygcPyw&ab_channel=Vincinator\" />\n\nThe shortened URL:\n\n<Example input=\"https://youtu.be/N7-7HJCXx10\" />\n\nThe URL from embedded videos:\n\n<Example input=\"https://www.youtube.com/embed/N7-7HJCXx10\" />\n"],"names":["getYouTubeId","input","match","getYouTubeIdRegex","Example","props","setInput","useState","id","useMemo","jsxs","Fragment","jsx","InputWrapper","target","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}