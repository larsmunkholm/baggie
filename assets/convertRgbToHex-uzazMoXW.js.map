{"version":3,"file":"convertRgbToHex-uzazMoXW.js","sources":["../../packages/core/src/color/convert/convertRgbToHex/Example.tsx","../../packages/core/src/color/convert/convertRgbToHex/convertRgbToHex.mdx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { ColorViewer } from \"../../_components/ColorViewer/ColorViewer\";\nimport { convertRgbToHex } from \"./convertRgbToHex\";\n\ninterface Props {\n    red: number;\n    green: number;\n    blue: number;\n    alpha: number;\n}\n\nexport const Example = (props: Props) => {\n    const [red, setRed] = useState(props.red);\n    const [green, setGreen] = useState(props.green);\n    const [blue, setBlue] = useState(props.blue);\n    const [alpha, setAlpha] = useState(props.alpha);\n\n    const hex = useMemo(\n        () => convertRgbToHex({ red, green, blue, alpha }),\n        [red, green, blue, alpha],\n    );\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Red\" labelRight={red} labelForId=\"red-input\">\n                    <input\n                        id=\"red-input\"\n                        type=\"range\"\n                        min={0}\n                        max={255}\n                        step={1}\n                        value={red}\n                        onChange={({ target }) => setRed(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Green\" labelRight={green} labelForId=\"green-input\">\n                    <input\n                        id=\"green-input\"\n                        type=\"range\"\n                        min={0}\n                        max={255}\n                        step={1}\n                        value={green}\n                        onChange={({ target }) => setGreen(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Blue\" labelRight={blue} labelForId=\"blue-input\">\n                    <input\n                        id=\"blue-input\"\n                        type=\"range\"\n                        min={0}\n                        max={255}\n                        step={1}\n                        value={blue}\n                        onChange={({ target }) => setBlue(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Alpha\" labelRight={alpha.toFixed(2)} labelForId=\"alpha-input\">\n                    <input\n                        id=\"alpha-input\"\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.01}\n                        value={alpha}\n                        onChange={({ target }) => setAlpha(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n            </div>\n\n            <div style={{ marginTop: \"25px\" }}>\n                <ColorViewer color={hex} />\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { convertRgbToHex } from \"@baggie/core\";\n\nconst rgb = {\n   red: ${red},\n   green: ${green},\n   blue: ${blue},\n   alpha: ${alpha},\n};\n\nconst hex = convertRgbToHex(rgb);\n// hex = ${hex ? `\"${hex}\"` : \"undefined\"}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# convertRgbToHex\n\nConvert an object with RGB color values to a hex color.\n\n## Parameters\n\n| Parameter | Type     | Required |\n| :-------- | :------- | :------: |\n| **color** | `object` |    ✔     |\n\n| Color property | Type     | Required | Description                   |\n| :------------- | :------- | :------: | :---------------------------- |\n| **red**        | `number` |    ✔     | The red color value (0-255)   |\n| **green**      | `number` |    ✔     | The green color value (0-255) |\n| **blue**       | `number` |    ✔     | The blue color value (0-255)  |\n| **alpha**      | `number` |          | The alpha value (0-1)         |\n\n## Example\n\n<Example red={128} green={128} blue={128} alpha={1} />\n"],"names":["Example","props","red","setRed","useState","green","setGreen","blue","setBlue","alpha","setAlpha","hex","useMemo","convertRgbToHex","jsxs","Fragment","jsx","InputWrapper","target","ColorViewer","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}