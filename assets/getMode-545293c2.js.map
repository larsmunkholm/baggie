{"version":3,"file":"getMode-545293c2.js","sources":["../../packages/core/src/math/average/getMode/getMode.ts","../../packages/core/src/math/average/getMode/Example.tsx","../../packages/core/src/math/average/getMode/getMode.mdx"],"sourcesContent":["/**\n * Get the mode from an array of numbers.\n * The mode is the most frequent value in a data set.\n */\nexport const getMode = (\n    numbers: number[],\n): { numbers: number[]; frequency: number } | undefined => {\n    const numbersMapping: { [key: string]: number } = {};\n    let greatestFrequency = 0;\n    let mode: number[] = [];\n\n    numbers.forEach((number: number) => {\n        numbersMapping[number] = (numbersMapping[number] || 0) + 1;\n\n        if (greatestFrequency < numbersMapping[number]) {\n            greatestFrequency = numbersMapping[number];\n            mode = [number];\n        } else if (greatestFrequency === numbersMapping[number]) {\n            mode.push(number);\n        }\n    });\n\n    return {\n        numbers: mode,\n        frequency: greatestFrequency,\n    };\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { getMode } from \"./getMode\";\n\ninterface Props {\n    defaultInput: number[];\n}\n\nexport const Example = (props: Props) => {\n    const [input, setInput] = useState(props.defaultInput.join(\", \"));\n\n    const { numbers, result } = useMemo(() => {\n        const numbers = input\n            .split(/\\s*,\\s*/)\n            .filter((value) => value.length)\n            .map((string) => (string.match(/^-?[0-9]*\\.?[0-9]*$/) ? parseFloat(string) : NaN));\n        return { numbers, result: getMode(numbers) };\n    }, [input]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Input\" labelForId=\"input-input\">\n                    <input\n                        id=\"input-input\"\n                        value={input}\n                        onChange={({ target }) => setInput(target.value)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Output\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>\n                        {result ? `[${result.numbers.join(\", \")}]` : \"Error\"}\n                    </div>\n                </InputWrapper>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { getMode } from \"@baggie/core\";\n\nconst numbers = [${numbers.join(\", \")}];\n\nconst result = getMode(numbers);\n/*\nresult = ${JSON.stringify(result, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getAntiMode\n\nGet the mode from an array of numbers.<br />\nThe mode is the most frequent value in a data set.\n\nThere can be more than one mode if multiple values\nare repeated an equal amount of times.\n\n## Examples\n\n<Example defaultInput={[1, 2, 2, 3, 3, 3]} />\n\n<Example defaultInput={[8, 8, -16, 42, 42, 8, 42]} />\n\n<Example defaultInput={[1, 2, 3]} />\n"],"names":["getMode","numbers","numbersMapping","greatestFrequency","mode","number","Example","props","input","setInput","useState","result","useMemo","numbers2","value","string","jsxs","Fragment","jsx","InputWrapper","target","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}