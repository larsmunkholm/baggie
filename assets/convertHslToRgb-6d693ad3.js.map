{"version":3,"file":"convertHslToRgb-6d693ad3.js","sources":["../../packages/core/src/color/convert/convertHslToRgb/Example.tsx","../../packages/core/src/color/convert/convertHslToRgb/convertHslToRgb.mdx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { ColorViewer } from \"../../_components/ColorViewer/ColorViewer\";\nimport { convertRgbToHex } from \"../convertRgbToHex/convertRgbToHex\";\nimport { convertHslToRgb } from \"./convertHslToRgb\";\n\ninterface Props {\n    hue: number;\n    saturation: number;\n    lightness: number;\n    alpha: number;\n}\n\nexport const Example = (props: Props) => {\n    const [hue, setHue] = useState(props.hue);\n    const [saturation, setSaturation] = useState(props.saturation);\n    const [lightness, setLightness] = useState(props.lightness);\n    const [alpha, setAlpha] = useState(props.alpha);\n\n    const { rgb, hex } = useMemo(() => {\n        const rgb = convertHslToRgb({ hue, saturation, lightness, alpha });\n        return { rgb, hex: convertRgbToHex(rgb) };\n    }, [hue, saturation, lightness, alpha]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Hue\" labelRight={hue} labelForId=\"hue-input\">\n                    <input\n                        id=\"hue-input\"\n                        type=\"range\"\n                        min={0}\n                        max={360}\n                        step={1}\n                        value={hue}\n                        onChange={({ target }) => setHue(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper\n                    label=\"Saturation\"\n                    labelRight={saturation}\n                    labelForId=\"saturation-input\"\n                >\n                    <input\n                        id=\"saturation-input\"\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.01}\n                        value={saturation}\n                        onChange={({ target }) => setSaturation(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Lightness\" labelRight={lightness} labelForId=\"lightness-input\">\n                    <input\n                        id=\"lightness-input\"\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.01}\n                        value={lightness}\n                        onChange={({ target }) => setLightness(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Alpha\" labelRight={alpha.toFixed(2)} labelForId=\"alpha-input\">\n                    <input\n                        id=\"alpha-input\"\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.01}\n                        value={alpha}\n                        onChange={({ target }) => setAlpha(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n            </div>\n\n            <div\n                style={{\n                    marginTop: \"25px\",\n                    display: \"flex\",\n                    gap: \"10px\",\n                    alignItems: \"flex-start\",\n                }}\n            >\n                <ColorViewer color={hex} />\n\n                <table style={{ margin: 0 }}>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <b>Red:</b>\n                            </td>\n                            <td>{rgb.red}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <b>Green:</b>\n                            </td>\n                            <td>{rgb.green}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <b>Blue:</b>\n                            </td>\n                            <td>{rgb.blue}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <b>Alpha:</b>\n                            </td>\n                            <td>{rgb.alpha}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { convertHslToRgb } from \"@baggie/core\";\n\nconst hsl = {\n   hue: ${hue},\n   saturation: ${saturation},\n   lightness: ${lightness},\n   alpha: ${alpha},\n};\n\nconst rgb = convertHslToRgb(hsl);\n/*\nrgb = ${JSON.stringify(rgb, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# convertHslToRgb\n\nConvert an object with HSL color values to RGB color values.\n\n## Parameters\n\n| Parameter | Type     | Required |\n| :-------- | :------- | :------: |\n| **color** | `object` |    ✔     |\n\n| Color property | Type     | Required | Description                |\n| :------------- | :------- | :------: | :------------------------- |\n| **hue**        | `number` |    ✔     | The hue value (0-360)      |\n| **saturation** | `number` |    ✔     | The saturation value (0-1) |\n| **lightness**  | `number` |    ✔     | The lightness value (0-1)  |\n| **alpha**      | `number` |          | The alpha value (0-1)      |\n\n## Example\n\n<Example hue={180} saturation={0.5} lightness={0.5} alpha={1} />\n"],"names":["Example","props","hue","setHue","useState","saturation","setSaturation","lightness","setLightness","alpha","setAlpha","rgb","hex","useMemo","rgb2","convertHslToRgb","convertRgbToHex","jsxs","Fragment","jsx","InputWrapper","target","ColorViewer","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}