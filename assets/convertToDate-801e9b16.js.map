{"version":3,"file":"convertToDate-801e9b16.js","sources":["../../packages/core/src/string/convert/convertToDate/Example.tsx","../../packages/core/src/string/convert/convertToDate/convertToDate.mdx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { convertToDate } from \"./convertToDate\";\n\ntype DateObj = { day: number; month: number; year: number };\n\ninterface Props {\n    date: string | DateObj;\n    zeroBasedMonth?: boolean;\n    monthBeforeDay?: boolean;\n}\n\nexport const Example = (props: Props) => {\n    const [date, setDate] = useState(props.date);\n    const [zeroBasedMonth, setZeroBasedMonth] = useState(props.zeroBasedMonth || false);\n    const [monthBeforeDay, setMonthBeforeDay] = useState(props.monthBeforeDay || false);\n\n    const returnedDate = useMemo(\n        () => convertToDate(date, { zeroBasedMonth, monthBeforeDay }),\n        [date, zeroBasedMonth, monthBeforeDay],\n    );\n\n    return (\n        <>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\n                {typeof date === \"string\" ? (\n                    <InputWrapper label=\"Date\" labelForId=\"date\">\n                        <input\n                            id=\"date-input\"\n                            value={date}\n                            onChange={({ target }) => setDate(target.value)}\n                            spellCheck={false}\n                        />\n                    </InputWrapper>\n                ) : (\n                    <div style={{ display: \"flex\", gap: \"10px\" }}>\n                        <InputWrapper label=\"Day\" labelForId=\"day\">\n                            <input\n                                id=\"day-input\"\n                                type=\"number\"\n                                value={date.day}\n                                onChange={({ target }) =>\n                                    setDate((current) => ({\n                                        ...(current as DateObj),\n                                        day: target.valueAsNumber,\n                                    }))\n                                }\n                            />\n                        </InputWrapper>\n                        <InputWrapper label=\"Month\" labelForId=\"month\">\n                            <input\n                                id=\"month-input\"\n                                type=\"number\"\n                                value={date.month}\n                                onChange={({ target }) =>\n                                    setDate((current) => ({\n                                        ...(current as DateObj),\n                                        month: target.valueAsNumber,\n                                    }))\n                                }\n                            />\n                        </InputWrapper>\n                        <InputWrapper label=\"Year\" labelForId=\"year\">\n                            <input\n                                id=\"year-input\"\n                                type=\"number\"\n                                value={date.year}\n                                onChange={({ target }) =>\n                                    setDate((current) => ({\n                                        ...(current as DateObj),\n                                        year: target.valueAsNumber,\n                                    }))\n                                }\n                            />\n                        </InputWrapper>\n                    </div>\n                )}\n\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={zeroBasedMonth}\n                        onChange={() => setZeroBasedMonth((current) => !current)}\n                    />{\" \"}\n                    Zero based month\n                </label>\n\n                {typeof date === \"string\" && (\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={monthBeforeDay}\n                            onChange={() => setMonthBeforeDay((current) => !current)}\n                        />{\" \"}\n                        Month before date\n                    </label>\n                )}\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { convertToDate } from \"@baggie/core\";\n\nconst date = ${typeof date === \"string\" ? `\"${date}\"` : JSON.stringify(date, null, 4)};\n${\n    monthBeforeDay || zeroBasedMonth\n        ? `const options = {\n${monthBeforeDay ? \"    monthBeforeDay: true,\\n\" : \"\"}${\n              zeroBasedMonth ? \"    zeroBasedMonth: true,\\n\" : \"\"\n          }};\\n`\n        : \"\"\n}\nconst returnedDate = convertToDate(date${monthBeforeDay || zeroBasedMonth ? \", options\" : \"\"});\n// ${\n                    returnedDate\n                        ? `returnedDate.toISOString() = \"${returnedDate.toISOString()}\"`\n                        : \"returnedDate = undefined\"\n                }\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# convertToDate\n\nConvert a string (or an object) to a date.\n\nReturns `undefined` if given an invalid date.\n\n## Parameters\n\n| Parameter   | Type                                                     | Required |\n| :---------- | :------------------------------------------------------- | :------: |\n| **date**    | `string \\| { day: number; month: number; year: number }` |    âœ”     |\n| **options** | `object`                                                 |          |\n\n| Option             | Type      | Default value |\n| :----------------- | :-------- | :------------ |\n| **zeroBasedMonth** | `boolean` | `false`       |\n| **monthBeforeDay** | `boolean` | `false`       |\n\n## Example\n\n<Example date=\"17. 6. 1986\" />\n<Example date={{ day: 17, month: 6, year: 1986 }} />\n<Example date=\"31-12-1986\" zeroBasedMonth />\n<Example date=\"06/17/1986\" monthBeforeDay />\n"],"names":["Example","props","date","setDate","useState","zeroBasedMonth","setZeroBasedMonth","monthBeforeDay","setMonthBeforeDay","returnedDate","useMemo","convertToDate","jsxs","Fragment","jsx","InputWrapper","target","current","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}