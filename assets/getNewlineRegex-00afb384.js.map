{"version":3,"file":"getNewlineRegex-00afb384.js","sources":["../../packages/core/src/string/regex/getNewlineRegex/Example.tsx","../../packages/core/src/string/regex/getNewlineRegex/getNewlineRegex.mdx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { getNewlineRegex } from \"./getNewlineRegex\";\n\ninterface Props {\n    string: string;\n}\n\nexport const Example = (props: Props) => {\n    const [string, setString] = useState(props.string);\n    const [includeWhitespace, setIncludeWhitespace] = useState(false);\n\n    const newString = useMemo(\n        () => string.replace(getNewlineRegex(includeWhitespace), \"-\"),\n        [string, includeWhitespace],\n    );\n\n    return (\n        <>\n            <InputWrapper label=\"String\" labelForId=\"string-input\">\n                <textarea\n                    id=\"string-input\"\n                    value={string}\n                    onChange={({ target }) => setString(target.value)}\n                    style={{ width: \"100%\", maxWidth: \"360px\" }}\n                    spellCheck={false}\n                    rows={3}\n                />\n            </InputWrapper>\n\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={includeWhitespace}\n                    onChange={() => setIncludeWhitespace((x) => !x)}\n                />{\" \"}\n                Include whitespace\n            </label>\n\n            <Source\n                dark\n                code={`\nimport { getNewlineRegex } from \"@baggie/core\";\n\nconst string = \\`${string}\\`;\n\nconst newString = string.replace(getNewlineRegex(${includeWhitespace ? \"true\" : \"\"}), \"-\");\n// newString = \\`${newString}\\`\n`}\n            />\n\n            <b>The returned regex:</b>\n\n            <Source\n                dark\n                code={`new RegExp(\"${getNewlineRegex(includeWhitespace).source}\", \"${\n                    getNewlineRegex(includeWhitespace).flags\n                }\")`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getNewlineRegex\n\nReturns a regular expression for finding newlines.\n\n## Parameters\n\n| Parameter             | Type      | Default value |\n| :-------------------- | :-------- | :------------ |\n| **includeWhitespace** | `boolean` | `false`       |\n\n## Example\n\n<Example\n    string={`Line 1\n Line 2\n  Line 3`}\n/>\n"],"names":["Example","props","string","setString","useState","includeWhitespace","setIncludeWhitespace","newString","useMemo","getNewlineRegex","jsxs","Fragment","jsx","InputWrapper","target","x","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}