{"version":3,"file":"convertHslToRgb-a60e269c.js","sources":["../../packages/core/src/color/convert/convertHslToRgb/convertHslToRgb.ts"],"sourcesContent":["import { HSLA } from \"../../_interfaces/hsla.interface\";\nimport { RGBA } from \"../../_interfaces/rgba.interface\";\n\n/**\n * Convert an object with HSL color values to RGB color values.\n */\nexport const convertHslToRgb = ({\n    hue,\n    saturation,\n    lightness,\n    alpha = 1,\n}: HSLA): RGBA => {\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n\n    // Achromatic\n    if (saturation === 0) {\n        red = green = blue = lightness;\n    }\n\n    // Chromatic\n    else {\n        const q =\n            lightness < 0.5\n                ? lightness * (1 + saturation)\n                : lightness + saturation - lightness * saturation;\n\n        const p = 2 * lightness - q;\n        const useHue = hue / 360;\n        const oneThird = 1 / 3;\n        const twoThirds = 2 / 3;\n        const oneSixth = 1 / 6;\n\n        for (let i = -1; i < 2; i += 1) {\n            let currentHue =\n                useHue + (i < 0 ? oneThird : i > 0 ? -oneThird : 0);\n\n            if (currentHue < 0) {\n                currentHue += 1;\n            } else if (currentHue > 1) {\n                currentHue -= 1;\n            }\n\n            currentHue =\n                currentHue < oneSixth\n                    ? p + (q - p) * 6 * currentHue\n                    : currentHue < 0.5\n                    ? q\n                    : currentHue < twoThirds\n                    ? p + (q - p) * (twoThirds - currentHue) * 6\n                    : p;\n\n            if (i < 0) {\n                red = currentHue;\n            } else if (i > 0) {\n                blue = currentHue;\n            } else {\n                green = currentHue;\n            }\n        }\n    }\n\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n};\n"],"names":["convertHslToRgb","hue","saturation","lightness","alpha","red","green","blue","q","p","useHue","oneThird","twoThirds","oneSixth","i","currentHue"],"mappings":"AAMO,MAAMA,EAAkB,CAAC,CAC5B,IAAAC,EACA,WAAAC,EACA,UAAAC,EACA,MAAAC,EAAQ,CACZ,IAAkB,CACd,IAAIC,EAAM,EACNC,EAAQ,EACRC,EAAO,EAGX,GAAIL,IAAe,EACfG,EAAMC,EAAQC,EAAOJ,MAIpB,CACK,MAAAK,EACFL,EAAY,GACNA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EAEzCO,EAAI,EAAIN,EAAYK,EACpBE,EAAST,EAAM,IACfU,EAAW,EAAI,EACfC,EAAY,EAAI,EAChBC,EAAW,EAAI,EAErB,QAASC,EAAI,GAAIA,EAAI,EAAGA,GAAK,EAAG,CACxB,IAAAC,EACAL,GAAUI,EAAI,EAAIH,EAAWG,EAAI,EAAI,CAACH,EAAW,GAEjDI,EAAa,EACCA,GAAA,EACPA,EAAa,IACNA,GAAA,GAGlBA,EACIA,EAAaF,EACPJ,GAAKD,EAAIC,GAAK,EAAIM,EAClBA,EAAa,GACbP,EACAO,EAAaH,EACbH,GAAKD,EAAIC,IAAMG,EAAYG,GAAc,EACzCN,EAENK,EAAI,EACET,EAAAU,EACCD,EAAI,EACJP,EAAAQ,EAECT,EAAAS,CAEhB,CACJ,CAEO,MAAA,CACH,IAAK,KAAK,MAAMV,EAAM,GAAG,EACzB,MAAO,KAAK,MAAMC,EAAQ,GAAG,EAC7B,KAAM,KAAK,MAAMC,EAAO,GAAG,EAC3B,MAAAH,CAAA,CAER"}