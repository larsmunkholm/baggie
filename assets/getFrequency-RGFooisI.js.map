{"version":3,"file":"getFrequency-RGFooisI.js","sources":["../../packages/core/src/math/average/getFrequency/getFrequency.ts","../../packages/core/src/math/average/getFrequency/Example.tsx","../../packages/core/src/math/average/getFrequency/getFrequency.mdx"],"sourcesContent":["/**\n * Get the frequency of each item in an array of numbers or strings.\n */\nexport const getFrequency = <T, R extends boolean = false>(\n    values: T[],\n    returnMap?: R,\n): R extends true ? Map<T, number> : { value: T; frequency: number }[] => {\n    const map = new Map<T, number>();\n    values.forEach((value) =>\n        map.set(value, map.has(value) ? (map.get(value) || 0) + 1 : 1),\n    );\n    return (\n        returnMap\n            ? map\n            : Array.from(map, ([value, frequency]) => ({\n                  value,\n                  frequency,\n              })).sort((a, b) =>\n                  a.frequency < b.frequency\n                      ? -1\n                      : a.frequency > b.frequency\n                        ? 1\n                        : 0,\n              )\n    ) as R extends true ? Map<T, number> : { value: T; frequency: number }[];\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { getFrequency } from \"./getFrequency\";\n\ninterface Props {\n    defaultInput: number[];\n}\n\nconst printMap = (map: Map<any, any>) => {\n    return (\n        \"Map {\\n\" +\n        Array.from(map).reduce((obj, [key, value]) => {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            obj += `    ${typeof key === \"string\" ? `\"${key}\"` : JSON.parse(key)} => ${value},\\n`;\n            return obj;\n        }, \"\") +\n        \"}\"\n    );\n};\n\nexport const Example = (props: Props) => {\n    const [inputString, setInputString] = useState(props.defaultInput.join(\", \"));\n    const [returnMap, setReturnMap] = useState(false);\n\n    const { input, result } = useMemo(() => {\n        const inputs = inputString\n            .split(/\\s*,\\s*/)\n            .filter((value) => value.length)\n            .map((string) => (string.match(/^-?[0-9]*\\.?[0-9]*$/) ? parseFloat(string) : string));\n        return { input: inputs, result: getFrequency(inputs, returnMap) };\n    }, [inputString, returnMap]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Input\" labelForId=\"input-input\">\n                    <input\n                        id=\"input-input\"\n                        value={inputString}\n                        onChange={({ target }) => setInputString(target.value)}\n                    />\n                </InputWrapper>\n            </div>\n\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={returnMap}\n                    onChange={() => setReturnMap((current) => !current)}\n                />{\" \"}\n                Return as Map object\n            </label>\n\n            <Source\n                dark\n                code={`\nimport { getFrequency } from \"@baggie/core\";\n\nconst input = [${input.map((item) => (typeof item === \"string\" ? `\"${item}\"` : item)).join(\", \")}];\n\nconst result = getFrequency(input${returnMap ? \", true\" : \"\"});\n/*\nresult = ${returnMap ? printMap(result as Map<any, any>) : JSON.stringify(result, null, 4)}\n*/\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# getFrequency\n\nGet the frequency of each item in an array of numbers or strings.\n\n## Examples\n\n<Example defaultInput={[1, 2, 2, 3, 3, 3]} />\n\n<Example defaultInput={[8, 8, 8, -16, -16, 42, 42, 42]} />\n\n<Example defaultInput={[1, 2, \"3c\"]} />\n"],"names":["getFrequency","values","returnMap","map","value","frequency","a","b","printMap","obj","key","Example","props","inputString","setInputString","useState","setReturnMap","input","result","useMemo","inputs","string","jsxs","Fragment","jsx","InputWrapper","target","current","Source","item","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}