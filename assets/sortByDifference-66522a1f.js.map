{"version":3,"file":"sortByDifference-66522a1f.js","sources":["../../packages/core/src/math/arithmetic/sortByDifference/sortByDifference.ts","../../packages/core/src/math/arithmetic/sortByDifference/Example.tsx","../../packages/core/src/math/arithmetic/sortByDifference/sortByDifference.mdx"],"sourcesContent":["/**\n * Sort an array of numbers by their distance to a target number.\n */\nexport const sortByDifference = <T>(\n    target: number | T,\n    array: T[],\n    getDifference?: T extends number ? undefined : (item: T) => number,\n): T[] => {\n    const getSortingValue =\n        typeof getDifference === \"function\"\n            ? getDifference\n            : (input: T) => input as unknown as number;\n\n    const realTarget =\n        typeof target === \"number\" ? target : getSortingValue(target);\n\n    return [...array].sort(\n        (a: T, b: T) =>\n            Math.abs(realTarget - getSortingValue(a)) -\n            Math.abs(realTarget - getSortingValue(b)),\n    );\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { sortByDifference } from \"./sortByDifference\";\n\ninterface Props {\n    target: number;\n    numbers: number[];\n}\n\nexport const Example = (props: Props) => {\n    const [target, setTarget] = useState(props.target);\n    const [inputNumbers, setInputNumbers] = useState(props.numbers.join(\", \"));\n\n    const { numbers, sorted } = useMemo(() => {\n        const numbers = inputNumbers\n            .split(/\\s*,\\s*/)\n            .filter((value) => value.length)\n            .map((string) => (string.match(/^-?[0-9]*\\.?[0-9]*$/) ? parseFloat(string) : NaN));\n        return { numbers, sorted: sortByDifference(target, numbers) };\n    }, [target, inputNumbers]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <InputWrapper label=\"Target\" labelForId=\"target-input\">\n                    <input\n                        id=\"target-input\"\n                        type=\"number\"\n                        value={target}\n                        onChange={({ target }) => setTarget(target.valueAsNumber)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Numbers\" labelForId=\"numbers-input\">\n                    <input\n                        id=\"numbers-input\"\n                        value={inputNumbers}\n                        onChange={({ target }) => setInputNumbers(target.value)}\n                    />\n                </InputWrapper>\n\n                <InputWrapper label=\"Sorted\" labelForId={undefined}>\n                    <div style={{ padding: \"5px 0\" }}>[{sorted.join(\", \")}]</div>\n                </InputWrapper>\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { sortByDifference } from \"@baggie/core\";\n\nconst target = ${target};\nconst numbers = [${numbers.join(\", \")}];\n\nconst sorted = sortByDifference(target, numbers);\n// sorted = [${sorted.join(\", \")}]\n`}\n            />\n        </>\n    );\n};\n","import { Source } from \"@storybook/blocks\";\nimport { Example } from \"./Example\";\n\n# sortByDifference\n\nSort an array of numbers by their difference to a target number.\n\n## Parameters\n\nIf you are only working with numbers\n\n| Parameter  | Type       | Required |\n| :--------- | :--------- | :------: |\n| **target** | `number`   |    ✔    |\n| **array**  | `number[]` |    ✔    |\n\nor if you are working with more complex data types\n\n| Parameter         | Type                  | Required |\n| :---------------- | :-------------------- | :------: |\n| **target**        | `T` or `number`       |    ✔    |\n| **array**         | `T[]`                 |    ✔    |\n| **getDifference** | `(item: T) => number` |    ✔    |\n\n## Example\n\nSort an array of **numbers**\n\n<Example target={8} numbers={[5, 10, 15, 20]} />\n\nYou can also sort things like an array of **objects**\n\n<Source\n    dark\n    code={`\nimport { sortByDifference } from \"@baggie/core\";\n\nconst target = { price: 5 };\nconst objects = [{ price: 1 }, { price: 9 }, { price: 4 }];\nconst getDifference = (obj) => obj.price;\n\nconst sorted = sortByDifference(target, objects, getDifference);\n// sorted = [{ price: 4 }, { price: 9 }, { price: 1 }]\n`}\n/>\n\n... or an array of **arrays**\n\n<Source\n    dark\n    code={`\nimport { sortByDifference } from \"@baggie/core\";\n\nconst target = 10;\nconst arrays = [[1, 99, \"8z\"], [20, 4, \"7a\"], [6, 6, \"6b\"]];\nconst getDifference = (arr) => arr[1];\n\nconst sorted = sortByDifference(target, arrays, getDifference);\n// sorted = [[6, 6, \"6b\"], [20, 4, \"7a\"], [1, 99, \"8z\"]]\n`}\n/>\n"],"names":["sortByDifference","target","array","getDifference","getSortingValue","input","realTarget","a","b","Example","props","setTarget","useState","inputNumbers","setInputNumbers","numbers","sorted","useMemo","numbers2","value","string","jsxs","Fragment","jsx","InputWrapper","target2","Source","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}