{"version":3,"file":"mixColors-c28961a8.js","sources":["../../packages/core/src/color/manipulate/mixColors/mixColors.ts","../../packages/core/src/color/manipulate/mixColors/Example.tsx","../../packages/core/src/color/manipulate/mixColors/mixColors.mdx"],"sourcesContent":["import { RGBA } from \"../../_interfaces/rgba.interface\";\nimport { convertStringToRgb } from \"../../convert/convertStringToRgb/convertStringToRgb\";\nimport { convertRgbToHex } from \"../../convert/convertRgbToHex/convertRgbToHex\";\n\n/**\n * Mix two colors together.\n */\nexport const mixColors = (\n    colorA: string | RGBA,\n    colorB: string | RGBA,\n    weight = 0.5,\n): string | undefined => {\n    try {\n        const rgb1 =\n            typeof colorA === \"string\" ? convertStringToRgb(colorA) : colorA;\n        const rgb2 =\n            typeof colorB === \"string\" ? convertStringToRgb(colorB) : colorB;\n        const red1 = rgb1.red / 255;\n        const red2 = rgb2.red / 255;\n        const green1 = rgb1.green / 255;\n        const green2 = rgb2.green / 255;\n        const blue1 = rgb1.blue / 255;\n        const blue2 = rgb2.blue / 255;\n        const alpha1 = typeof rgb1.alpha === \"number\" ? rgb1.alpha : 1;\n        const alpha2 = typeof rgb2.alpha === \"number\" ? rgb2.alpha : 1;\n\n        return convertRgbToHex({\n            red: Math.round((red2 + (red1 - red2) * weight) * 255),\n            green: Math.round((green2 + (green1 - green2) * weight) * 255),\n            blue: Math.round((blue2 + (blue1 - blue2) * weight) * 255),\n            alpha:\n                Math.round((alpha2 + (alpha1 - alpha2) * weight) * 1000) / 1000,\n        });\n    } catch (err) {\n        return undefined;\n    }\n};\n","import React, { useMemo, useState } from \"react\";\nimport { Source } from \"@storybook/blocks\";\nimport { InputWrapper } from \"@baggie/react\";\nimport { ColorViewer } from \"../../_components/ColorViewer/ColorViewer\";\nimport { ColorInput } from \"../../_components/ColorInput/ColorInput\";\nimport { mixColors } from \"./mixColors\";\n\ninterface Props {\n    colorA: string;\n    colorB: string;\n    weight: number;\n}\n\nexport const Example = (props: Props) => {\n    const [colorA, setColorA] = useState(props.colorA);\n    const [colorB, setColorB] = useState(props.colorB);\n    const [weight, setWeight] = useState(props.weight);\n\n    const mixed = useMemo(() => mixColors(colorA, colorB, weight), [colorA, colorB, weight]);\n\n    return (\n        <>\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <ColorInput label=\"Color A\" value={colorA} onChange={setColorA} />\n                <ColorInput label=\"Color B\" value={colorB} onChange={setColorB} />\n\n                <InputWrapper label=\"Weight\" labelForId=\"weight-input\">\n                    <input\n                        id=\"weight-input\"\n                        type=\"range\"\n                        value={weight}\n                        min={0}\n                        max={1}\n                        step={0.01}\n                        onChange={({ target }) => setWeight(target.valueAsNumber)}\n                    />{\" \"}\n                    {weight.toFixed(2)}\n                </InputWrapper>\n            </div>\n\n            <div style={{ marginTop: \"25px\" }}>\n                <ColorViewer color={mixed} />\n            </div>\n\n            <Source\n                dark\n                code={`\nimport { mixColors } from \"@baggie/core\";\n\nconst colorA = \"${colorA}\";\nconst colorB = \"${colorB}\";\nconst weight = ${weight};\n\nconst mixed = mixColors(colorA, colorB, weight);\n// mixed = ${mixed ? `\"${mixed}\"` : \"undefined\"}\n`}\n            />\n        </>\n    );\n};\n","import { Example } from \"./Example\";\n\n# mixColors\n\nMix two colors together.\n\n## Parameters\n\n| Parameter  | Type     | Required | Default value | Description                                                                                                                                                               |\n| :--------- | :------- | :------: | :------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **colorA** | `string` |    ✔     |               | The base color                                                                                                                                                            |\n| **colorB** | `string` |    ✔     |               | The other base color                                                                                                                                                      |\n| **weight** | `number` |          | `0.5`         | The weight as a decimal number.<br />A larger weight indicates that more of `colorA` should be used, and a smaller weight indicates that more of `colorB` should be used. |\n\n## Example\n\n<Example colorA=\"#ff0000\" colorB=\"#ffff00\" weight={0.5} />\n"],"names":["mixColors","colorA","colorB","weight","rgb1","convertStringToRgb","rgb2","red1","red2","green1","green2","blue1","blue2","alpha1","alpha2","convertRgbToHex","Example","props","setColorA","useState","setColorB","setWeight","mixed","useMemo","jsxs","Fragment","jsx","ColorInput","InputWrapper","target","ColorViewer","Source","MDXContent","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment"],"mappings":"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"}