{"version":3,"file":"nonNumberFallback-KCIHPOTj.js","sources":["../../packages/core/src/math/helpers/nonNumberFallback/nonNumberFallback.ts"],"sourcesContent":["/**\n * Return fallback if input is not and can't be converted into a number.\n */\nexport const nonNumberFallback = (value: any, fallback: number): number => {\n    if (typeof value === \"number\") return value;\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!isNaN(parsed)) return parsed;\n    }\n    return fallback;\n};\n"],"names":["nonNumberFallback","value","fallback","parsed"],"mappings":"AAGa,MAAAA,EAAoB,CAACC,EAAYC,IAA6B,CACvE,GAAI,OAAOD,GAAU,SAAiB,OAAAA,EAClC,GAAA,OAAOA,GAAU,SAAU,CACrB,MAAAE,EAAS,WAAWF,CAAK,EAC3B,GAAA,CAAC,MAAME,CAAM,EAAU,OAAAA,CAC/B,CACO,OAAAD,CACX"}